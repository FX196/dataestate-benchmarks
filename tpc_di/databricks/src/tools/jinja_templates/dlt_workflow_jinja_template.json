{
    "name": "{{ job_name }}",
    "email_notifications": {},
    "webhook_notifications": {},
    "timeout_seconds": 0,
    "max_concurrent_runs": 1,
    "format": "MULTI_TASK",   
    "job_clusters": [
        {
            "job_cluster_key": "{{ job_name }}",
            "new_cluster": {
                "spark_version": "{{ dbr }}",
                "spark_conf": {
                    {% if cust_mgmt_worker_count == 0 %}
                    "spark.master": "local[*, 4]",
                    "spark.databricks.cluster.profile": "singleNode",
                    "spark.databricks.adaptive.localShuffleReader.enabled": "true",
                    {% endif %}
                    "spark.databricks.delta.schema.autoMerge.enabled": "true",
                    "spark.databricks.delta.properties.defaults.autoOptimize.optimizeWrite": "true",
                    "spark.databricks.streaming.forEachBatch.optimized.enabled": "true",
                    "spark.databricks.preemption.enabled": "false",
                    "spark.databricks.streaming.forEachBatch.optimized.fastPath.enabled": "true",
                    "spark.sql.shuffle.partitions": {{ cust_mgmt_partitions }}
                },
                {% if cloud_provider == "Azure" %} 
                "azure_attributes": {
                    "availability": "SPOT_WITH_FALLBACK_AZURE",
                    "first_on_demand": 1,
                    "spot_bid_price_percent": -1
                },
                {% endif %}
                {% if cloud_provider == "AWS" %}
                "aws_attributes": {
                    "availability": "SPOT_WITH_FALLBACK",
                    "first_on_demand": 1,
                    "zone_id" : "auto",
                    "spot_bid_price_percent": 100
                },
                {% endif %}
                "spark_env_vars": {
                    "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                },
                {% if cust_mgmt_worker_count == 0 %}
                "custom_tags": {
                    "ResourceClass": "SingleNode"
                },
                {% endif %}
                "driver_node_type_id": "{{ driver_node_type }}",
                "node_type_id": "{{ worker_node_type }}",
                "num_workers": "{{ cust_mgmt_worker_count }}",
                "enable_elastic_disk": true,
                "data_security_mode": "SINGLE_USER",
                "runtime_engine": "STANDARD"
            }
        }
    ],
    "tasks": [
        {
            "task_key": "Load-CustomerMgmt-XML-File",
            "run_if": "ALL_SUCCESS",
            "notebook_task": {
                "notebook_path": "{{ repo_src_path }}/native_notebooks/bronze/CustomerMgmtRaw",
                "base_parameters": {
                    "wh_db": "{{ wh_target }}_DLT_{{ scale_factor }}",
                    "tpcdi_directory": "{{ tpcdi_directory }}",
                    "scale_factor": "{{ scale_factor }}"
                },
                "source": "WORKSPACE"
            },
            "job_cluster_key": "{{ job_name }}",
            "libraries": [
                {
                    "maven": {
                        "coordinates": "com.databricks:spark-xml_2.12:0.14.0"
                    }
                }
            ],
            "timeout_seconds": 0,
            "email_notifications": {
                "no_alert_for_skipped_runs": false
            }
        },
        {
            "task_key": "TPC-DI-DLT-PIPELINE",
            "run_if": "ALL_SUCCESS",
            "depends_on": [
                {
                    "task_key": "Load-CustomerMgmt-XML-File"
                }
            ],
            "pipeline_task": {
                "pipeline_id": "{{ pipeline_id }}",
                "full_refresh": true
            },
            "timeout_seconds": 0,
            "email_notifications": {
                "no_alert_for_skipped_runs": false
            }
        }
    ]
}